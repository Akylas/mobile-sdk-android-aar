buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.12.1' // match your Gradle version
    }
}

plugins {
    id 'de.undercouch.download' version '5.1.1'
    id 'maven-publish'
}

// Pass GitHub release URL and version as properties
def libVersion = project.findProperty("version") ?: System.getenv("VERSION") ?: ""
def aarUrl = project.findProperty("aarUrl") ?: System.getenv("AAR_URL") ?: ""

if (!aarUrl) {
    throw new GradleException("You must provide -PaarUrl=<url-to-aar>")
}
if (!libVersion) {
    throw new GradleException("You must provide -Pversion=<version>")
}
def downloadedAar = layout.buildDirectory.file("downloads/external-lib.aar")
def outputAarName = "carto-mobile-sdk-android-${libVersion}.aar"
def outputAar = layout.buildDirectory.file("output/aar/$outputAarName")

tasks.register('downloadAar', de.undercouch.gradle.tasks.download.Download) {
    src aarUrl
    dest downloadedAar
    onlyIfModified true
}
tasks.register("prepareAar") {
    dependsOn("downloadAar")
    doLast {
        copy {
            from(downloadedAar.get().asFile)
            into(layout.buildDirectory.dir("output/aar").get().asFile)
            rename { outputAarName }
        }
        // Print the size
        if (outputAar.get().asFile.exists()) {
            println "Prepared AAR: ${outputAar.get().asFile}, size: ${outputAar.get().asFile.length()} bytes"
        } else {
            println "Error: AAR file not found after prepareArtifact"
        }
    }
}

tasks.named("publish") {
    dependsOn("prepareAar")
}
publishing {
   
    publications {
        release(MavenPublication) {
            groupId = 'com.carto'
            artifactId = 'carto-mobile-sdk'
            version = libVersion

            artifact(outputAar) {
                builtBy(tasks.named("prepareAar"))
            }
        }
    }
}
